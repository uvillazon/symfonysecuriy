<?php


namespace Elfec\SgauthBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Elfec\SgauthBundle\Entity\Repository\BaseRepository;

/**
 * destinatariosCorreosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class destinatariosCorreosRepository extends BaseRepository
{

    /**
     * @param $data
     * @param $login
     * @return \Elfec\SgauthBundle\Model\RespuestaSP
     */
    public function grabarDestinatario($data, $login)
    {
        $result = new \Elfec\SgauthBundle\Model\RespuestaSP();
        try {
            $data["id_dest"] = $this->getValueArray($data, "id_dest", 0);
            if ($data["id_dest"] === 0) {
                $grupo = $this->findOneBy(array("correo" => $data["correo"]));
                if (is_null($grupo)) {
                    $new = new \Elfec\SgauthBundle\Entity\destinatariosCorreos();
                    $new->setEstado("ACTIVO");
                    $new->setNombre($data["nombre"]);
                    $new->setIdAplic($data["id_aplic"]);
                    $new->setCorreo($data["correo"]);
                    $new->setApellido($data["apellido"]);
                    $new->setLoginUsr($login);
                    $new->setFechaReg(new \DateTime()) ;

                    $this->_em->persist($new);

                    $this->_em->flush();
                    $result->success = true;
                    $result->msg = "Proceso Ejecutado correctamente";
                    $result->id = $new->getIdDest();

                } else {
                    $result->success = false;
                    $result->msg = "Existe el correo con el mismo nombre intente nuevamente";
                }
            } else {
                $grupo = $this->find($data["id_dest"]);
                if (is_null($grupo)) {

                    $result->success = false;
                    $result->msg = "No Existe el registro.";

                } else {

                    $grupo->setEstado($data["estado"]);
                    $grupo->setNombre($data["nombre"]);
                    $grupo->setIdAplic($data["id_aplic"]);
                    $grupo->setCorreo($data["correo"]);
                    $grupo->setApellido($data["apellido"]);
                    $this->_em->persist($grupo);
                    $this->_em->flush();
                    $result->success = true;
                    $result->msg = "Proceso Ejecutado correctamente";
                    $result->id = $grupo->getIdDest();
                }
            }
        } catch (\Exception $e) {
            $result->success = false;
            $result->msg = $e->getMessage();
        }
        return $result;
    }
}
